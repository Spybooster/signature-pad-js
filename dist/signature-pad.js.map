{
  "version": 3,
  "sources": ["../src/SignaturePad.js"],
  "sourcesContent": ["/**\n * SignaturePad.js v1.0.0\n * --------------------------------------------------------\n * Custom lightweight signature pad with undo, resize, sync,\n * and SVG/PNG/JSON export support.\n *\n * @version     1.0.0\n * @author      Niel - Spybooster\n * @license     MIT (https://opensource.org/licenses/MIT)\n * --------------------------------------------------------\n * Usage:\n *\n * const sigPad = new SignaturePad(document.getElementById('sig-container'), {\n *     background: '#fff',\n *     color: '#000',\n *     thickness: 2,\n *     guideline: true,\n *     syncField: document.getElementById('signature64'),\n *     syncFormat: 'PNG',\n *     onChange: () => console.log(\"Signature updated.\")\n * });\n *\n * sigPad.clear(); // Clear signature\n * sigPad.undo();  // Undo last stroke\n * sigPad.toDataURL(); // Export as image\n * sigPad.toJSON();    // Export as JSON\n * sigPad.toSVG();     // Export as SVG\n * --------------------------------------------------------\n */\n\nclass SignaturePad {\n  constructor(container, options = {}) {\n    this.container = container;\n    this.opts = Object.assign({\n      background: '#fff',\n      color: '#000',\n      thickness: 2,\n      guideline: false,\n      guidelineColor: '#a0a0a0',\n      guidelineOffset: 50,\n      guidelineIndent: 10,\n      disableResize: false,\n      undoLimit: 10,\n      syncField: null,\n      syncFormat: 'JSON',\n      svgStyles: false,\n      onChange: null\n    }, options);\n\n    this.lines = []; // All drawn lines\n\n    this._initCanvas();\n    this._attachEvents();\n\n    if (!this.opts.disableResize) {\n      window.addEventListener('resize', () => this._resizeCanvas());\n    }\n\n    this.clear(false);\n  }\n\n  _initCanvas() {\n    this.canvas = document.createElement('canvas');\n    this.container.innerHTML = '';\n    this.container.appendChild(this.canvas);\n    this.ctx = this.canvas.getContext('2d');\n    this._resizeCanvas();\n    this.ctx.lineCap = 'round';\n    this.ctx.lineJoin = 'round';\n  }\n\n  _resizeCanvas() {\n    const { width, height } = this.container.getBoundingClientRect();\n    const dataUrl = this.canvas.toDataURL();\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext('2d');\n    this._drawBackground();\n    this._redrawLines();\n  }\n\n  _attachEvents() {\n    const down = e => this._startStroke(e);\n    this.canvas.addEventListener('pointerdown', down);\n    this.canvas.addEventListener('pointermove', e => this._continueStroke(e));\n    document.addEventListener('pointerup', e => this._endStroke(e));\n  }\n\n  _startStroke({ clientX, clientY }) {\n    this.points = [];\n    this._addPoint(clientX, clientY);\n    this.isDrawing = true;\n  }\n\n  _continueStroke({ clientX, clientY }) {\n    if (!this.isDrawing) return;\n    this._addPoint(clientX, clientY);\n    if (this.points.length > 1) {\n      const [p1, p2] = this.points.slice(-2);\n      this.ctx.strokeStyle = this.opts.color;\n      this.ctx.lineWidth = this.opts.thickness;\n      this.ctx.beginPath();\n      this.ctx.moveTo(p1.x, p1.y);\n      this.ctx.lineTo(p2.x, p2.y);\n      this.ctx.stroke();\n    }\n  }\n\n  _endStroke() {\n    if (!this.isDrawing) return;\n    this.isDrawing = false;\n\n    if (this.points.length === 1) {\n      const p = this.points[0];\n      this.ctx.beginPath();\n      this.ctx.arc(p.x, p.y, this.opts.thickness / 2, 0, 2 * Math.PI);\n      this.ctx.fillStyle = this.opts.color;\n      this.ctx.fill();\n    }\n\n    this.lines.push(this.points.slice());\n    if (this.lines.length > this.opts.undoLimit) this.lines.shift();\n\n    this._triggerChange();\n  }\n\n  _addPoint(x, y) {\n    const rect = this.canvas.getBoundingClientRect();\n    this.points.push({\n      x: x - rect.left,\n      y: y - rect.top\n    });\n  }\n\n  _drawBackground() {\n    if (!this.ctx) return;\n    this.ctx.fillStyle = this.opts.background;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    if (this.opts.guideline) {\n      const y = this.canvas.height - this.opts.guidelineOffset;\n      this.ctx.strokeStyle = this.opts.guidelineColor;\n      this.ctx.lineWidth = 1;\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.opts.guidelineIndent, y);\n      this.ctx.lineTo(this.canvas.width - this.opts.guidelineIndent, y);\n      this.ctx.stroke();\n    }\n  }\n\n  _redrawLines() {\n    if (!this.ctx) return;\n    this._drawBackground();\n    this.ctx.strokeStyle = this.opts.color;\n    this.ctx.lineWidth = this.opts.thickness;\n    this.lines.forEach(line => {\n      this.ctx.beginPath();\n      line.forEach((pt, i) => {\n        i === 0 ? this.ctx.moveTo(pt.x, pt.y) : this.ctx.lineTo(pt.x, pt.y);\n      });\n      this.ctx.stroke();\n    });\n  }\n\n  _triggerChange() {\n    if (this.opts.syncField) {\n      let val;\n      switch (this.opts.syncFormat) {\n        case 'PNG': val = this.toDataURL(); break;\n        case 'SVG': val = this.toSVG(); break;\n        default: val = this.toJSON();\n      }\n      this.opts.syncField.value = val;\n    }\n    if (typeof this.opts.onChange === 'function') {\n      this.opts.onChange(this);\n    }\n  }\n\n  clear(trigger = true) {\n    this.lines = [];\n    this._drawBackground();\n    if (trigger) this._triggerChange();\n  }\n\n  undo() {\n    this.lines.pop();\n    this._redrawLines();\n    this._triggerChange();\n  }\n\n  isEmpty() {\n    return this.lines.length === 0;\n  }\n\n  toJSON() {\n    return JSON.stringify({ lines: this.lines });\n  }\n\n  toDataURL(type = 'image/png', quality) {\n    return this.canvas.toDataURL(type, quality);\n  }\n\n  toSVG() {\n    const { background, color, thickness, svgStyles } = this.opts;\n    const szW = this.canvas.width, szH = this.canvas.height;\n    const bgAttr = svgStyles\n      ? `style=\"fill:${background};\"`\n      : `fill=\"${background}\"`;\n    const lineAttr = svgStyles\n      ? `style=\"fill:none;stroke:${color};stroke-width:${thickness};\"`\n      : `fill=\"none\" stroke=\"${color}\" stroke-width=\"${thickness}\"`;\n\n    let sv = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${szW}\" height=\"${szH}\">`;\n    sv += `<rect ${bgAttr} x=\"0\" y=\"0\" width=\"${szW}\" height=\"${szH}\"/>`;\n    sv += `<g ${lineAttr}>`;\n    this.lines.forEach(line => {\n      const pts = line.map(p => `${p.x},${p.y}`).join(' ');\n      sv += `<polyline points=\"${pts}\" />`;\n    });\n    sv += `</g></svg>`;\n    return sv;\n  }\n\n  draw(data) {\n    this.clear(false);\n    switch (typeof data) {\n      case 'string':\n        if (data.startsWith('data:')) {\n          const img = new Image();\n          img.onload = () => this.ctx.drawImage(img, 0, 0);\n          img.src = data;\n        } else if (data.trim().startsWith('<svg')) {\n          const dom = new DOMParser().parseFromString(data, 'image/svg+xml');\n          this._parseSVG(dom);\n        } else {\n          this.draw(JSON.parse(data));\n        }\n        break;\n      default:\n        if (data.lines) {\n          this.lines = data.lines;\n          this._redrawLines();\n        }\n    }\n    this._triggerChange();\n  }\n\n  _parseSVG(dom) {\n    const pls = Array.from(dom.querySelectorAll('polyline'));\n    this.lines = pls.map(pl => {\n      return (pl.getAttribute('points') || '').split(' ').map(pt => {\n        const [x, y] = pt.split(',').map(Number);\n        return { x, y };\n      });\n    });\n    this._redrawLines();\n  }\n}\n\nexport default SignaturePad;"],
  "mappings": "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",
  "names": []
}
